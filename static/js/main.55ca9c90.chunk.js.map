{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Form","todos","setTodos","inputText","setInputText","setStatus","useState","error","setError","guardarFirebase","tarea","collection","add","then","docRef","console","log","id","catch","className","onChange","e","target","value","type","placeholder","onClick","preventDefault","trim","length","setTimeout","text","completed","Math","random","name","Todo","todo","editarCompleted","doc","set","delete","TodoList","filteredTodos","map","App","status","setfilteredTodos","useEffect","onSnapshot","querySnapshot","docs","forEach","push","data","filter","task","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55ca9c90.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDWoNPrklSzRK1icmct4AMvZY07zrSBagk\",\r\n    authDomain: \"to-do-list-b784c.firebaseapp.com\",\r\n    projectId: \"to-do-list-b784c\",\r\n    storageBucket: \"to-do-list-b784c.appspot.com\",\r\n    messagingSenderId: \"441713649686\",\r\n    appId: \"1:441713649686:web:ff96b7aafa3934b271ad37\",\r\n    measurementId: \"G-4VF03SL9XF\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  export const db = fb.firestore();","import { useState } from \"react\";\r\nimport { db } from \"../firebase-config\";\r\n\r\n\r\nconst Form = ({ todos, setTodos, inputText, setInputText, setStatus }) => {\r\n  const [error, setError] = useState(false);\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.trim().length === 0) {\r\n      setError(true);\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 1500);\r\n      return;\r\n    }\r\n    setError(false);\r\n\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        text: inputText,\r\n        completed: false,\r\n        id: Math.random() * 10000,\r\n      },\r\n    ]);\r\n    guardarFirebase({\r\n      text: inputText,\r\n      completed: false,\r\n      id: Math.random() * 10000,\r\n    });\r\n    setInputText(\"\");\r\n  };\r\n\r\n  const inputTextHandler = (e) => setInputText(e.target.value);\r\n\r\n  const statusHandler = (e) => setStatus(e.target.value);\r\n\r\n  const guardarFirebase = (tarea) => {\r\n    db.collection(\"todos\")\r\n      .add(tarea)\r\n      .then((docRef) => {\r\n        console.log(\"Documento con el ID: \", docRef.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error añadiendo documento \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"input-container\">\r\n        <input\r\n          onChange={inputTextHandler}\r\n          type=\"text\"\r\n          value={inputText}\r\n          className=\"todo-input\"\r\n          placeholder={error ? \"Olvidaste escribir tu tarea\" : \"Escribe aquí tu tarea\"}\r\n        />\r\n        <button\r\n          onClick={submitTodoHandler}\r\n          className=\"todo-button\"\r\n          type=\"submit\"\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"select\">\r\n        <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n          <option value=\"all\">Todas</option>\r\n          <option value=\"completed\">Completas</option>\r\n          <option value=\"uncompleted\">Incompletas</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import { db } from \"../firebase-config\";\r\n\r\n//Función to-do\r\nconst Todo = ({ todo }) => {\r\n  const deleteHandler = () => {\r\n    // setTodos(todos.filter(task => task.id !== todo.id))\r\n    db.collection(\"todos\")\r\n      .doc(todo.id)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"Documento borrado exitosamente!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ha ocurrido un error al borrar documento: \", error);\r\n      });\r\n  };\r\n\r\n  const completeHandler = () => editarCompleted(todo);\r\n\r\n  const editarCompleted = (tarea) => {\r\n    // Add a new document in collection \"cities\"\r\n    db.collection(\"todos\")\r\n      .doc(tarea.id)\r\n      .set({\r\n        ...tarea,\r\n        completed: !tarea.completed,\r\n      })\r\n      .then(() => {\r\n        console.log(\"Documento escrito exitosamente!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ha ocurrido un error al escribir documento: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ul className=\"todo\">\r\n      <li className= {`todo-item ${todo.completed && \"completed\"}`}>\r\n        {todo.text}\r\n      </li>\r\n      <button\r\n        onClick={completeHandler}\r\n        className={`complete-btn ${todo.completed && \"btn-change\"}`}\r\n      >\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash-alt\"></i>\r\n      </button>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Todo;","import Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n         {filteredTodos.map(todo => (\r\n          <Todo\r\n            todos={todos} \r\n            todo={todo}\r\n            setTodos={setTodos}\r\n            key={todo.id}/>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport { db } from \"./firebase-config\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setfilteredTodos] = useState([]);\n\n  const traerDesdeFirebase = () => {\n    db.collection(\"todos\").onSnapshot((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n        docs.push({ ...doc.data(), id: doc.id });\n      });\n      setTodos(docs);\n    });\n  };\n\n  useEffect(traerDesdeFirebase, []);\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch (status) {\n        case \"completed\":\n          setfilteredTodos(todos.filter((task) => task.completed === true));\n          break;\n        case \"uncompleted\":\n          setfilteredTodos(todos.filter((task) => task.completed === false));\n          break;\n        default:\n          setfilteredTodos(todos);\n      }\n    };\n\n     //Local storage\n    // const saveLocalTodos = () => {\n    //   localStorage.setItem('todos', JSON.stringify(todos))\n    // }\n\n    filteredHandler();\n  }, [todos, status]);\n\n  \n  return (\n    <div>\n      <header>\n        <h1>\n          ToDo List\n        </h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}